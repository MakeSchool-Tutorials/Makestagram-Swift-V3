{
  "_args": [
    [
      {
        "raw": "sliced@^1.0.1",
        "scope": null,
        "escapedName": "sliced",
        "name": "sliced",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/dion/Desktop/Makestagram-Swift-V3/node_modules/wrapped"
    ]
  ],
  "_from": "sliced@>=1.0.1 <2.0.0",
  "_id": "sliced@1.0.1",
  "_inCache": true,
  "_location": "/sliced",
  "_nodeVersion": "1.8.1",
  "_npmUser": {
    "name": "aaron",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "_npmVersion": "2.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sliced@^1.0.1",
    "scope": null,
    "escapedName": "sliced",
    "name": "sliced",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/wrapped"
  ],
  "_resolved": "https://registry.npmjs.org/sliced/-/sliced-1.0.1.tgz",
  "_shasum": "0b3a662b5d04c3177b1926bea82b03f837a2ef41",
  "_shrinkwrap": null,
  "_spec": "sliced@^1.0.1",
  "_where": "/Users/dion/Desktop/Makestagram-Swift-V3/node_modules/wrapped",
  "author": {
    "name": "Aaron Heckmann",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/aheckmann/sliced/issues"
  },
  "dependencies": {},
  "description": "A faster Node.js alternative to Array.prototype.slice.call(arguments)",
  "devDependencies": {
    "benchmark": "~1.0.0",
    "mocha": "1.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0b3a662b5d04c3177b1926bea82b03f837a2ef41",
    "tarball": "https://registry.npmjs.org/sliced/-/sliced-1.0.1.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "index.js"
  ],
  "gitHead": "e7c989016d2062995cd102322b65784ba8977ee3",
  "homepage": "https://github.com/aheckmann/sliced#readme",
  "keywords": [
    "arguments",
    "slice",
    "array"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "aaron",
      "email": "aaron.heckmann+github@gmail.com"
    }
  ],
  "name": "sliced",
  "optionalDependencies": {},
  "readme": "#sliced\n==========\n\nA faster alternative to `[].slice.call(arguments)`.\n\n[![Build Status](https://secure.travis-ci.org/aheckmann/sliced.png)](http://travis-ci.org/aheckmann/sliced)\n\nExample output from [benchmark.js](https://github.com/bestiejs/benchmark.js)\n\n    Array.prototype.slice.call x 1,401,820 ops/sec ±2.16% (90 runs sampled)\n    [].slice.call x 1,313,116 ops/sec ±2.04% (96 runs sampled)\n    cached slice.call x 10,297,910 ops/sec ±1.81% (96 runs sampled)\n    sliced x 19,906,019 ops/sec ±1.23% (89 runs sampled)\n    fastest is sliced\n\n    Array.prototype.slice.call(arguments, 1) x 1,373,238 ops/sec ±1.84% (95 runs sampled)\n    [].slice.call(arguments, 1) x 1,395,336 ops/sec ±1.36% (93 runs sampled)\n    cached slice.call(arguments, 1) x 9,926,018 ops/sec ±1.67% (92 runs sampled)\n    sliced(arguments, 1) x 20,747,990 ops/sec ±1.16% (93 runs sampled)\n    fastest is sliced(arguments, 1)\n\n    Array.prototype.slice.call(arguments, -1) x 1,319,908 ops/sec ±2.12% (91 runs sampled)\n    [].slice.call(arguments, -1) x 1,336,170 ops/sec ±1.33% (97 runs sampled)\n    cached slice.call(arguments, -1) x 10,078,718 ops/sec ±1.21% (98 runs sampled)\n    sliced(arguments, -1) x 20,471,474 ops/sec ±1.81% (92 runs sampled)\n    fastest is sliced(arguments, -1)\n\n    Array.prototype.slice.call(arguments, -2, -10) x 1,369,246 ops/sec ±1.68% (97 runs sampled)\n    [].slice.call(arguments, -2, -10) x 1,387,935 ops/sec ±1.70% (95 runs sampled)\n    cached slice.call(arguments, -2, -10) x 9,593,428 ops/sec ±1.23% (97 runs sampled)\n    sliced(arguments, -2, -10) x 23,178,931 ops/sec ±1.70% (92 runs sampled)\n    fastest is sliced(arguments, -2, -10)\n\n    Array.prototype.slice.call(arguments, -2, -1) x 1,441,300 ops/sec ±1.26% (98 runs sampled)\n    [].slice.call(arguments, -2, -1) x 1,410,326 ops/sec ±1.96% (93 runs sampled)\n    cached slice.call(arguments, -2, -1) x 9,854,419 ops/sec ±1.02% (97 runs sampled)\n    sliced(arguments, -2, -1) x 22,550,801 ops/sec ±1.86% (91 runs sampled)\n    fastest is sliced(arguments, -2, -1)\n\n_Benchmark  [source](https://github.com/aheckmann/sliced/blob/master/bench.js)._\n\n##Usage\n\n`sliced` accepts the same arguments as `Array#slice` so you can easily swap it out.\n\n```js\nfunction zing () {\n  var slow = [].slice.call(arguments, 1, 8);\n  var args = slice(arguments, 1, 8);\n\n  var slow = Array.prototype.slice.call(arguments);\n  var args = slice(arguments);\n  // etc\n}\n```\n\n## install\n\n    npm install sliced\n\n\n[LICENSE](https://github.com/aheckmann/sliced/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/aheckmann/sliced.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.0.1"
}
